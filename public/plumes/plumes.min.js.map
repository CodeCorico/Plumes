{"version":3,"sources":["plumes/plumes.js"],"names":["window","Ractive","Plumes","bootstrap","callback","_inScope","element","rvRequireCount","parentNode","tag","tagName","toLowerCase","$","partials","$cleaner","append","html","find","remove","$rvPartials","each","i","rvPartial","src","getAttribute","target","trim","innerHTML","page","plName","el","data","cls","template","observe","attr","join","bindUses","component","binds","defaultsToFalse","forEach","bind","value","defaultValue","indexOf","set","bindTexts","Object","keys","get","key"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,OAASF,OAAOC,QAAQC,WAEvCF,OAAOC,QAAQC,OAAOC,UAAY,SAASC,GACzC,QAASC,GAASC,EAASC,GAGzB,GAFAA,EAAiBA,GAAkB,GAE9BD,EAAQE,WACX,OAAO,CAGT,IAAIC,GAAMH,EAAQE,WAAWE,QAAQC,aAErC,IAAW,cAAPF,GAGF,GAFAF,IAEIA,EAAiB,EACnB,OAAO,MAGN,IAAW,cAAPE,EACP,OAAO,CAGT,OAAOJ,GAASC,EAAQE,WAAYD,GAGtCK,EAAE,WACA,GAAIC,MACAC,EAAWF,EAAE,WAAWG,OAAOH,EAAE,QAAQI,OAE7CF,GAASG,KAAK,kCAAkCC,QAEhD,IAAIC,GAAcL,EAASG,KAAK,aAEhCE,GAAYC,KAAK,SAASC,EAAGC,GAC3B,GAAIC,GAAMD,EAAUE,aAAa,SAAU,EACvCC,EAASH,EAAUE,aAAa,WAE/BD,GAAOE,GAAUpB,EAASiB,KAC7BT,EAASY,GAAUb,EAAEc,KAAKJ,EAAUK,cAIxCR,EAAYD,QAEZ,IAAIU,GAAO,GAAI5B,QAAOC,SACpB4B,OAAQ,UACRC,GAAI,OACJC,MACEC,QAEFC,SAAUrB,EAAEc,KAAKZ,EAASE,QAC1BH,SAAUA,GAGZe,GAAKM,QAAQ,MAAO,SAASF,GAC3BpB,EAAEgB,EAAKE,IAAIK,KAAK,QAASH,EAAMA,EAAII,KAAK,KAAO,MAG7ChC,GACFA,EAASwB,MAKf5B,OAAOC,QAAQC,OAAOmC,SAAW,SAASC,EAAWC,EAAOC,GAC1DA,EAAkBA,MAElBD,EAAME,QAAQ,SAASC,GACrBJ,EAAUJ,QAAQ,OAASQ,EAAM,SAASC,GACxC,GAAIC,KAAeJ,EAAgBK,QAAQH,IAAQ,EAEnDC,GAAwB,mBAATA,GAAuBC,EAAeD,EACrDA,EAAiB,QAATA,GAAyBA,EACjCA,EAAiB,SAATA,GAA2BA,EAEnCL,EAAUQ,IAAI,MAAQJ,EAAMC,QAKlC3C,OAAOC,QAAQC,OAAO6C,UAAY,SAAST,GACzCU,OAAOC,KAAKX,EAAUY,IAAI,cAAgBT,QAAQ,SAASU,GACzDb,EAAUJ,QAAQ,QAAUiB,EAAK,SAASR,GACpB,mBAATA,IACTL,EAAUQ,IAAI,SAAWK,EAAKR","file":"plumes/plumes.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.Plumes = window.Ractive.Plumes || {};\n\n  window.Ractive.Plumes.bootstrap = function(callback) {\n    function _inScope(element, rvRequireCount) {\n      rvRequireCount = rvRequireCount || 0;\n\n      if (!element.parentNode) {\n        return true;\n      }\n\n      var tag = element.parentNode.tagName.toLowerCase();\n\n      if (tag == 'rv-require') {\n        rvRequireCount++;\n\n        if (rvRequireCount > 1) {\n          return false;\n        }\n      }\n      else if (tag == 'rv-partial') {\n        return false;\n      }\n\n      return _inScope(element.parentNode, rvRequireCount);\n    }\n\n    $(function() {\n      var partials = {},\n          $cleaner = $('<div />').append($('body').html());\n\n      $cleaner.find('script[type=\"text/javascript\"]').remove();\n\n      var $rvPartials = $cleaner.find('rv-partial');\n\n      $rvPartials.each(function(i, rvPartial) {\n        var src = rvPartial.getAttribute('src') || false,\n            target = rvPartial.getAttribute('target');\n\n        if (!src && target && _inScope(rvPartial)) {\n          partials[target] = $.trim(rvPartial.innerHTML);\n        }\n      });\n\n      $rvPartials.remove();\n\n      var page = new window.Ractive({\n        plName: 'pl-page',\n        el: 'body',\n        data: {\n          cls: []\n        },\n        template: $.trim($cleaner.html()),\n        partials: partials\n      });\n\n      page.observe('cls', function(cls) {\n        $(page.el).attr('class', cls ? cls.join(' ') : '');\n      });\n\n      if (callback) {\n        callback(page);\n      }\n    });\n  };\n\n  window.Ractive.Plumes.bindUses = function(component, binds, defaultsToFalse) {\n    defaultsToFalse = defaultsToFalse || [];\n\n    binds.forEach(function(bind) {\n      component.observe('use-' + bind, function(value) {\n        var defaultValue = defaultsToFalse.indexOf(bind) > -1 ? false : true;\n\n        value = typeof value == 'undefined' ? defaultValue : value;\n        value = value == 'true' ? true : value;\n        value = value == 'false' ? false : value;\n\n        component.set('use' + bind, value);\n      });\n    });\n  };\n\n  window.Ractive.Plumes.bindTexts = function(component) {\n    Object.keys(component.get('texts') || {}).forEach(function(key) {\n      component.observe('text-' + key, function(value) {\n        if (typeof value != 'undefined') {\n          component.set('texts.' + key, value);\n        }\n      });\n    });\n  };\n\n})();\n"],"sourceRoot":"/source/"}