{"version":3,"sources":["screen-message/screen-message.js"],"names":["window","Ractive","controller","component","data","el","config","done","_play","playArgs","ScreenMessage","set","_playArgs","setTimeout","_playMessage","message","_hideMessage","index","callback","words","get","forEach","word","i","_displayMessage","length","split","map","display","out","_$el","height","outerHeight","DISPLAY_WORD_TIME","DISPLAY_TEXT_TIME","_done","$","find","observe"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,WAAW,iBAAkB,SAASC,EAAWC,EAAMC,EAAIC,EAAQC,GAiBhF,QAASC,GAAMC,GACTA,GAAYA,GAAYD,IAC1BE,EAAcC,IAAI,OAAQ,MAE1BC,EAAYH,EACZC,EAAcC,IAAI,WAAW,GAC7BD,EAAcC,IAAI,eAAe,GAEjCE,WAAW,WACTC,EAAaL,EAASM,UACrB,MAIP,QAASC,GAAaC,EAAOC,GAC3B,GAAc,IAAVD,EAGF,WAFAC,IAKF,IAAIC,GAAQT,EAAcU,IAAI,QAE9BD,GAAME,QAAQ,SAASC,EAAMC,GAC3Bb,EAAcC,IAAI,SAAWY,EAAI,SAAS,KAG5CV,WAAW,WACTK,KACC,KAGL,QAASM,GAAgBT,EAASE,EAAOC,GACvCF,EAAaC,EAAO,WAElB,GAAIF,EAAQU,QAAUR,EAKpB,YAJIC,GACFA,IAMJ,IAAIC,GAAQJ,EAAQE,GAAOS,MAAM,KAAKC,IAAI,SAASL,GACjD,OACEA,KAAMA,EACNM,SAAS,EACTC,KAAK,IAITnB,GAAcC,IAAI,QAASQ,GAE3BT,EAAcC,IAAI,cAAemB,EAAK9B,OAAO+B,SAAWD,EAAKf,QAAQiB,eAAiB,GAEtFnB,WAAW,WACTM,EAAME,QAAQ,SAASC,EAAMC,GAE3BV,WAAW,WACTH,EAAcC,IAAI,SAAWY,EAAI,aAAa,IAC7CU,EAAoBV,KAIzBV,WAAW,WAETI,IAEAJ,WAAW,WACTW,EAAgBT,EAASE,EAAOC,IAC/BgB,IAEFD,EAAoBd,EAAMM,OAAS,SAO5C,QAASX,GAAaC,GACpBA,EAA4B,gBAAXA,IAAuBA,GAAWA,EAEnDS,EAAgBT,EAAS,EAAGoB,GAG9B,QAASA,KACPzB,EAAcC,IAAI,eAAe,GAEjCE,WAAW,WACTH,EAAcC,IAAI,WAAW,GAC7BD,EAAcC,IAAI,eAAe,GAE7BC,EAAUL,MACZK,EAAUL,OAGZK,EAAY,MACX,KAhHL,GAAIsB,GAAoB,IACpBD,EAAoB,IAEpBH,GACE9B,OAAQoC,EAAEpC,SAEZY,EAAY,KAEZF,EAAgBP,GAClBC,KAAMA,GAGR0B,GAAKzB,GAAK+B,EAAE1B,EAAcL,IAC1ByB,EAAKf,QAAUe,EAAKzB,GAAGgC,KAAK,YAsG5B3B,EAAc4B,QAAQ,OAAQ,SAAS7B,GACrCI,WAAW,WACTL,EAAMC,OAIVF","file":"screen-message/screen-message.min.js","sourcesContent":["(function() {\r\n  'use strict';\r\n\r\n  window.Ractive.controller('screen-message', function(component, data, el, config, done) {\r\n\r\n    var DISPLAY_TEXT_TIME = 3000,\r\n        DISPLAY_WORD_TIME = 150,\r\n\r\n        _$el = {\r\n          window: $(window)\r\n        },\r\n        _playArgs = null;\r\n\r\n    var ScreenMessage = component({\r\n      data: data\r\n    });\r\n\r\n    _$el.el = $(ScreenMessage.el);\r\n    _$el.message = _$el.el.find('.message');\r\n\r\n    function _play(playArgs) {\r\n      if (playArgs && playArgs != _play) {\r\n        ScreenMessage.set('play', null);\r\n\r\n        _playArgs = playArgs;\r\n        ScreenMessage.set('playing', true);\r\n        ScreenMessage.set('playingDone', false);\r\n\r\n        setTimeout(function() {\r\n          _playMessage(playArgs.message);\r\n        }, 550);\r\n      }\r\n    }\r\n\r\n    function _hideMessage(index, callback) {\r\n      if (index === 0) {\r\n        callback();\r\n\r\n        return;\r\n      }\r\n\r\n      var words = ScreenMessage.get('words');\r\n\r\n      words.forEach(function(word, i) {\r\n        ScreenMessage.set('words[' + i + '].out', true);\r\n      });\r\n\r\n      setTimeout(function() {\r\n        callback();\r\n      }, 350);\r\n    }\r\n\r\n    function _displayMessage(message, index, callback) {\r\n      _hideMessage(index, function() {\r\n\r\n        if (message.length == index) {\r\n          if (callback) {\r\n            callback();\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        var words = message[index].split(' ').map(function(word) {\r\n          return {\r\n            word: word,\r\n            display: false,\r\n            out: false\r\n          };\r\n        });\r\n\r\n        ScreenMessage.set('words', words);\r\n\r\n        ScreenMessage.set('messageTop', (_$el.window.height() - _$el.message.outerHeight()) / 2);\r\n\r\n        setTimeout(function() {\r\n          words.forEach(function(word, i) {\r\n\r\n            setTimeout(function() {\r\n              ScreenMessage.set('words[' + i + '].display', true);\r\n            }, DISPLAY_WORD_TIME * i);\r\n\r\n          });\r\n\r\n          setTimeout(function() {\r\n\r\n            index++;\r\n\r\n            setTimeout(function() {\r\n              _displayMessage(message, index, callback);\r\n            }, DISPLAY_TEXT_TIME);\r\n\r\n          }, DISPLAY_WORD_TIME * words.length + 350);\r\n\r\n        });\r\n\r\n      });\r\n    }\r\n\r\n    function _playMessage(message) {\r\n      message = typeof message == 'string' ? [message] : message;\r\n\r\n      _displayMessage(message, 0, _done);\r\n    }\r\n\r\n    function _done() {\r\n      ScreenMessage.set('playingDone', true);\r\n\r\n      setTimeout(function() {\r\n        ScreenMessage.set('playing', false);\r\n        ScreenMessage.set('playingDone', false);\r\n\r\n        if (_playArgs.done) {\r\n          _playArgs.done();\r\n        }\r\n\r\n        _playArgs = null;\r\n      }, 350);\r\n    }\r\n\r\n    ScreenMessage.observe('play', function(playArgs) {\r\n      setTimeout(function() {\r\n        _play(playArgs);\r\n      });\r\n    });\r\n\r\n    done();\r\n  });\r\n\r\n})();\r\n"],"sourceRoot":"/source/"}