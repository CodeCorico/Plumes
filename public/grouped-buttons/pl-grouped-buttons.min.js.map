{"version":3,"sources":["grouped-buttons/pl-grouped-buttons.js"],"names":["window","Ractive","controller","component","data","el","config","done","_registerIndicatorEvents","on","args","index","parseInt","$","attr","GroupedButtons","once","set","get","MODES","COMPACT","width","_updatePositions","callback","require","then","orientation","buttons","positions","compactPositionsTop","compactPositions","compactOpened","hidden","windowWidth","totalWidth","compactTotalWidth","compactTop","compactHeight","i","length","button","findChild","type","isReady","ready","setTimeout","fire","DEFAULT","plName","extend","mode","compactButtonPosition","action","event","hide","show","compactMode","defaultMode","opened","observe"],"mappings":"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","file":"grouped-buttons/pl-grouped-buttons.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.controller('pl-grouped-buttons', function(component, data, el, config, done) {\n\n    var MODES = {\n      DEFAULT: 'default',\n      COMPACT: 'compact'\n    };\n\n    var GroupedButtons = component({\n      plName: 'pl-grouped-buttons',\n      data: $.extend(true, {\n        mode: MODES.DEFAULT,\n        hidden: true,\n        orientation: 'left',\n        buttons: [],\n        positions: [],\n        compactPositionsTop: [],\n        compactPositions: [],\n        compactButtonPosition: -100,\n        compactOpened: false,\n        compactHeight: 0,\n\n        action: function(event, component) {\n          if (!component) {\n            return;\n          }\n\n          var index = parseInt($(component.el).attr('data-index'), 10),\n              button = GroupedButtons.get('buttons[' + index + ']'),\n              component = GroupedButtons.findChild('data-index', index);\n\n          GroupedButtons.fire('beforeAction', {\n            event: event,\n            button: button,\n            component: component\n          });\n\n          if (GroupedButtons.get('mode') == MODES.COMPACT && GroupedButtons.get('compactOpened')) {\n            GroupedButtons.fire('compactAction');\n          }\n\n          if (button && button.action) {\n            button.action(event, component);\n          }\n\n          GroupedButtons.fire('action', {\n            event: event,\n            button: button,\n            component: component\n          });\n        }\n      }, data),\n\n      hide: function() {\n        if (GroupedButtons.get('hidden')) {\n          return;\n        }\n\n        GroupedButtons.set('hidden', true);\n\n        GroupedButtons.set('compactButtonPosition', -100);\n\n        _updatePositions();\n      },\n\n      show: function() {\n        if (!GroupedButtons.get('hidden')) {\n          return;\n        }\n\n        GroupedButtons.set('hidden', false);\n\n        if (GroupedButtons.get('mode') == MODES.COMPACT) {\n          GroupedButtons.set('compactButtonPosition', -15);\n        }\n\n        _updatePositions();\n      },\n\n      compactMode: function() {\n        if (GroupedButtons.get('mode') == MODES.COMPACT) {\n          return;\n        }\n\n        GroupedButtons.set('mode', MODES.COMPACT);\n\n        GroupedButtons.set('compactButtonPosition', -15);\n      },\n\n      defaultMode: function() {\n        if (GroupedButtons.get('mode') == MODES.DEFAULT) {\n          return;\n        }\n\n        if (GroupedButtons.get('compactOpened')) {\n          GroupedButtons.fire('compactAction');\n        }\n\n        GroupedButtons.set('mode', MODES.DEFAULT);\n\n        GroupedButtons.set('compactButtonPosition', -100);\n      }\n    });\n\n    GroupedButtons.on('compactAction', function() {\n      var compactOpened = !GroupedButtons.get('compactOpened');\n\n      GroupedButtons.fire('beforeCompact', {\n        button: GroupedButtons,\n        opened: compactOpened\n      });\n\n      GroupedButtons.set('compactOpened', compactOpened);\n\n      _updatePositions(function(args) {\n        if (compactOpened) {\n          GroupedButtons.set('compactHeight', args.compactHeight);\n        }\n\n        GroupedButtons.fire('compact', {\n          button: GroupedButtons,\n          opened: compactOpened\n        });\n      });\n    });\n\n    function _registerIndicatorEvents(component) {\n      component.on('showNotification', function(args) {\n        var index = parseInt($(component.el).attr('data-index'), 10);\n\n        GroupedButtons.once('positionsChanged', function() {\n          GroupedButtons.set('compactPositionsTop[' + index + ']', 0);\n          GroupedButtons.set('compactPositions[' + index + ']', 0);\n\n          if (GroupedButtons.get('mode') == MODES.COMPACT) {\n            GroupedButtons.set('compactButtonPosition', -100);\n          }\n        });\n\n        GroupedButtons.set('buttons[' + index + '].width', args.width + 5);\n      });\n\n      component.on('hideNotification', function() {\n        var index = parseInt($(component.el).attr('data-index'), 10);\n\n        GroupedButtons.set('buttons[' + index + '].width', 50);\n\n        if (GroupedButtons.get('mode') == MODES.COMPACT) {\n          GroupedButtons.set('compactButtonPosition', -15);\n        }\n      });\n    }\n\n    function _updatePositions(callback) {\n      GroupedButtons.require().then(function() {\n        var orientation = GroupedButtons.get('orientation'),\n            buttons = GroupedButtons.get('buttons'),\n            positions = GroupedButtons.get('positions'),\n            compactPositionsTop = GroupedButtons.get('compactPositionsTop'),\n            compactPositions = GroupedButtons.get('compactPositions'),\n            compactOpened = GroupedButtons.get('compactOpened'),\n            hidden = GroupedButtons.get('hidden'),\n            windowWidth = $(window).width(),\n            totalWidth = 0,\n            compactTotalWidth = 20,\n            compactTop = 0,\n            compactHeight = 60;\n\n        for (var i = buttons.length - 1; i >= 0; i--) {\n          var button = buttons[i],\n              component = GroupedButtons.findChild('data-index', i);\n\n          if (hidden) {\n            positions[i] = -100;\n            compactPositions[i] = -100;\n          }\n          else {\n            positions[i] = totalWidth - (orientation == 'right' && button.type == 'indicator' ? 5 : 0);\n\n            if (compactOpened) {\n              compactPositions[i] = compactTotalWidth;\n            }\n            else {\n              compactPositions[i] = -100;\n            }\n          }\n\n          compactPositionsTop[i] = compactTop;\n\n          if (!component) {\n            return;\n          }\n\n          if (!button.isReady) {\n            button.isReady = true;\n            button.width = 50;\n\n            if (button.type == 'indicator') {\n              _registerIndicatorEvents(component, button, i);\n            }\n\n            if (button.ready) {\n              button.ready(component);\n            }\n          }\n\n          totalWidth += button.width || 0;\n          compactTotalWidth += button.width || 0;\n\n          if (!hidden && compactTotalWidth > windowWidth) {\n            compactHeight += 50;\n            compactTop += 50;\n            compactTotalWidth = 20;\n            compactPositionsTop[i] = compactTop;\n\n            if (compactOpened) {\n              compactPositions[i] = compactTotalWidth;\n            }\n          }\n        }\n\n        GroupedButtons.set('positions', positions);\n        GroupedButtons.set('compactPositionsTop', compactPositionsTop);\n        GroupedButtons.set('compactPositions', compactPositions);\n\n        setTimeout(function() {\n          GroupedButtons.fire('positionsChanged');\n        });\n\n        if (callback) {\n          callback({\n            compactHeight: compactHeight\n          });\n        }\n      });\n    }\n\n    GroupedButtons.observe('buttons', function() {\n      _updatePositions();\n    });\n\n    _updatePositions();\n\n    done();\n  });\n\n})();\n"],"sourceRoot":"/source/"}