{"version":3,"sources":["lists/grouped-list.js"],"names":["window","Ractive","controller","component","data","el","config","done","_refresh","GroupedList","fire","lvl","level","keypath","split","length","_$el","$","list","find","content","on","realScrollTop","get","scrollTop","$lastItemMoved","children","each","$item","this","removeClass","css","top","position","$prev","prevAll","Math","max","outerHeight","height","$next","filter","nextTop","z-index","min","addClass","item","scroll","resize","off","observe"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,WAAW,eAAgB,SAASC,EAAWC,EAAMC,EAAIC,EAAQC,GAgB9E,QAASC,KACPC,EAAYC,KAAK,WAhBnBN,EAAKO,IAAM,EACXP,EAAKQ,MAAQ,SAASC,GACpB,MAAOA,GAAQC,MAAM,SAASC,OAAS,EAGzC,IAAIN,GAAcN,GAChBC,KAAMA,IAGJY,GACEhB,OAAQiB,EAAEjB,QACVkB,KAAMD,EAAER,EAAYJ,IAAIc,KAAK,iBAC7BC,QAASH,EAAER,EAAYJ,IAAIc,KAAK,yBAOtCV,GAAYY,GAAG,UAAW,WACxB,GAAIC,GAAgBN,EAAKE,KAAKK,IAAI,GAAGC,UACjCC,EAAiB,IAErBT,GAAKI,QAAQM,WAAWC,KAAK,WAC3B,GAAIH,GAAYF,EACZM,EAAQX,EAAEY,MACVjB,EAAQgB,EAAMxB,KAAK,QAEvBwB,GACGE,YAAY,8CACZC,IAAI,MAAO,GAEd,IAAIC,GAAMJ,EAAMK,WAAWD,GAE3B,IAAc,IAAVpB,EAAa,CACf,GAAIsB,GAAQjB,EAAEW,EAAMO,QAAQ,WAAavB,EAAQ,IAAIW,IAAI,GACzDC,GAAYY,KAAKC,IAAIL,EAAKE,EAAMD,WAAWD,IAAME,EAAMI,aAAY,IAGrE,GAAUd,EAANQ,EAAiB,CACnB,GAAIO,GAASX,EAAMU,aAAY,GAC3BE,EAAQZ,EAAMT,KAAK,wBAAwBsB,OAAO,WAChD,MAAOxB,GAAEY,MAAMzB,KAAK,UAAYQ,GAEtC4B,GAAQA,EAAMzB,OAASE,EAAEuB,EAAMjB,IAAI,IAAM,IACzC,IAAImB,GAAUF,EAAQA,EAAMP,WAAWD,IAAMO,EAASvB,EAAKI,QAAQkB,cAAgBC,CAEnFX,GAAMG,KACJY,UAAW,KAAO/B,EAClBoB,IAAKI,KAAKQ,IAAIpB,EAAWkB,GAAWV,IAGlCU,EAAUlB,IACZI,EAAMiB,SAAS,sBACfpB,EAAiBG,EACjBnB,EAAYC,KAAK,SACfoC,KAAMlB,QAMVH,IACFA,EAAeoB,SAAS,2BACxBpC,EAAYC,KAAK,aACfoC,KAAMrB,OAKZT,EAAKE,KAAK6B,OAAOvC,GAEjBQ,EAAKhB,OAAOgD,OAAOxC,GAEnBC,EAAYY,GAAG,WAAY,WACzBL,EAAKhB,OAAOiD,IAAI,SAAUzC,KAG5BC,EAAYyC,QAAQ,QAAS1C,GAE7BA,IAEAD","file":"lists/grouped-list.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.controller('grouped-list', function(component, data, el, config, done) {\n    data.lvl = 0;\n    data.level = function(keypath) {\n      return keypath.split('items').length - 2;\n    };\n\n    var GroupedList = component({\n      data: data\n    });\n\n    var _$el = {\n          window: $(window),\n          list: $(GroupedList.el).find('.grouped-list'),\n          content: $(GroupedList.el).find('.grouped-list-content')\n        };\n\n    function _refresh() {\n      GroupedList.fire('refresh');\n    }\n\n    GroupedList.on('refresh', function() {\n      var realScrollTop = _$el.list.get(0).scrollTop,\n          $lastItemMoved = null;\n\n      _$el.content.children().each(function() {\n        var scrollTop = realScrollTop,\n            $item = $(this),\n            level = $item.data('level');\n\n        $item\n          .removeClass('grouped-list-fixed grouped-list-fixed-last')\n          .css('top', '');\n\n        var top = $item.position().top;\n\n        if (level !== 0) {\n          var $prev = $($item.prevAll('.level-' + (level - 1)).get(0));\n          scrollTop = Math.max(top, $prev.position().top + $prev.outerHeight(true));\n        }\n\n        if (top < scrollTop) {\n          var height = $item.outerHeight(true),\n              $next = $item.find('~ .grouped-list-item').filter(function() {\n                return $(this).data('level') <= level;\n              });\n          $next = $next.length ? $($next.get(0)) : null;\n          var nextTop = $next ? $next.position().top - height : _$el.content.outerHeight() - height;\n\n          $item.css({\n            'z-index': 9999 - level,\n            top: Math.min(scrollTop, nextTop) - top\n          });\n\n          if (nextTop > scrollTop) {\n            $item.addClass('grouped-list-fixed');\n            $lastItemMoved = $item;\n            GroupedList.fire('fixed', {\n              item: $item\n            });\n          }\n        }\n      });\n\n      if ($lastItemMoved) {\n        $lastItemMoved.addClass('grouped-list-fixed-last');\n        GroupedList.fire('lastFixed', {\n          item: $lastItemMoved\n        });\n      }\n    });\n\n    _$el.list.scroll(_refresh);\n\n    _$el.window.resize(_refresh);\n\n    GroupedList.on('teardown', function() {\n      _$el.window.off('resize', _refresh);\n    });\n\n    GroupedList.observe('items', _refresh);\n\n    _refresh();\n\n    done();\n  });\n\n})();\n"],"sourceRoot":"/source/"}