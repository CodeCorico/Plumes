{"version":3,"sources":["messages/messages-message.js"],"names":["window","Ractive","controller","component","data","el","config","done","_hideMessage","index","callback","words","Message","get","forEach","word","i","set","setTimeout","_displayMessage","message","args","length","split","filter","trim","map","display","out","lineCallback","displayWordTime","displayedLineCallback","freezeLastLine","displayTextTime","DISPLAY_TEXT_TIME","DISPLAY_WORD_TIME","_message","on","$","extend"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,WAAW,mBAAoB,SAASC,EAAWC,EAAMC,EAAIC,EAAQC,GAWlF,QAASC,GAAaC,EAAOC,GAC3B,GAAc,IAAVD,EAGF,WAFAC,IAKF,IAAIC,GAAQC,EAAQC,IAAI,QAExBF,GAAMG,QAAQ,SAASC,EAAMC,GAC3BJ,EAAQK,IAAI,SAAWD,EAAI,SAAS,KAGtCE,WAAW,WACTR,KACC,KAGL,QAASS,GAAgBC,EAASX,EAAOY,GACvCb,EAAaC,EAAO,WAElB,GAAIW,EAAQE,QAAUb,EAKpB,YAJIY,EAAKX,UACPW,EAAKX,WAMT,IAAIC,GAAQS,EAAQX,GAAOc,MAAM,yBAC9BC,OAAO,SAAST,GACf,QAASA,EAAKU,SAEfC,IAAI,SAASX,GACZ,OACEA,KAAMA,EACNY,SAAS,EACTC,KAAK,IAIXhB,GAAQK,IAAI,QAASN,GAEjBU,EAAKQ,cACPR,EAAKQ,aAAajB,GAGpBM,WAAW,WACTP,EAAMG,QAAQ,SAASC,EAAMC,GAE3BE,WAAW,WACTN,EAAQK,IAAI,SAAWD,EAAI,aAAa,IACvCK,EAAKS,gBAAkBd,KAI5BE,WAAW,WAELG,EAAKU,uBACPV,EAAKU,sBAAsBnB,GAG7BH,IAEAS,WAAW,WACLE,EAAQE,QAAUb,GAASY,EAAKW,eAC9BX,EAAKX,UACPW,EAAKX,WAIPS,EAAgBC,EAASX,EAAOY,IAEjCA,EAAKY,kBAENZ,EAAKS,gBAAkBnB,EAAMW,OAAU,SApFjD,GAAIY,GAAoB,IACpBC,EAAoB,IAEpBC,EAAW,KAEXxB,EAAUT,GACZC,KAAMA,GAqFRQ,GAAQyB,GAAG,QAAS,WAClBD,EAAW,KACXxB,EAAQK,IAAI,QAAS,QAGvBL,EAAQyB,GAAG,OAAQ,SAAShB,GAC1BA,EAAOA,MACFA,EAAKD,UAIVC,EAAKD,QAAiC,gBAAhBC,GAAKD,SAAuBC,EAAKD,SAAWC,EAAKD,QAEvEF,WAAW,WAETG,EAAOiB,EAAEC,QAAO,GACd7B,SAAU,KACVmB,aAAc,KACdE,sBAAuB,KACvBE,gBAAiBC,EACjBJ,gBAAiBK,EACjBH,gBAAgB,GACfX,GAEHA,EAAKY,gBAAmBZ,EAAKY,iBAA4C,IAAzBZ,EAAKY,gBAA4CZ,EAAKY,gBAAzBC,EAC7Eb,EAAKS,gBAAmBT,EAAKS,iBAA4C,IAAzBT,EAAKS,gBAA4CT,EAAKS,gBAAzBK,EAE7EC,EAAWf,EAAKD,QAEhBD,EAAgBE,EAAKD,QAAS,EAAGC,QAIrCT,EAAQyB,GAAG,cAAe,SAAS3B,GACjC,MAAK0B,IAAaA,EAASd,WAQ3Bd,GAAa4B,EAASd,OAAS,EAAG,WAC5BZ,GACFA,WATEA,GACFA,OAaNH","file":"messages/messages-message.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.controller('messages-message', function(component, data, el, config, done) {\n\n    var DISPLAY_TEXT_TIME = 3000,\n        DISPLAY_WORD_TIME = 150,\n\n        _message = null;\n\n    var Message = component({\n      data: data\n    });\n\n    function _hideMessage(index, callback) {\n      if (index === 0) {\n        callback();\n\n        return;\n      }\n\n      var words = Message.get('words');\n\n      words.forEach(function(word, i) {\n        Message.set('words[' + i + '].out', true);\n      });\n\n      setTimeout(function() {\n        callback();\n      }, 350);\n    }\n\n    function _displayMessage(message, index, args) {\n      _hideMessage(index, function() {\n\n        if (message.length == index) {\n          if (args.callback) {\n            args.callback();\n          }\n\n          return;\n        }\n\n        var words = message[index].split(/ +(?=[^<]*(<[^/]|$))/g)\n          .filter(function(word) {\n            return !!word.trim();\n          })\n          .map(function(word) {\n            return {\n              word: word,\n              display: false,\n              out: false\n            };\n          });\n\n        Message.set('words', words);\n\n        if (args.lineCallback) {\n          args.lineCallback(Message);\n        }\n\n        setTimeout(function() {\n          words.forEach(function(word, i) {\n\n            setTimeout(function() {\n              Message.set('words[' + i + '].display', true);\n            }, args.displayWordTime * i);\n\n          });\n\n          setTimeout(function() {\n\n            if (args.displayedLineCallback) {\n              args.displayedLineCallback(Message);\n            }\n\n            index++;\n\n            setTimeout(function() {\n              if (message.length == index && args.freezeLastLine) {\n                if (args.callback) {\n                  args.callback();\n                }\n              }\n              else {\n                _displayMessage(message, index, args);\n              }\n            }, args.displayTextTime);\n\n          }, (args.displayWordTime * words.length) + 350);\n\n        });\n\n      });\n    }\n\n    Message.on('reset', function() {\n      _message = null;\n      Message.set('words', null);\n    });\n\n    Message.on('play', function(args) {\n      args = args || {};\n      if (!args.message) {\n        return;\n      }\n\n      args.message = typeof args.message == 'string' ? [args.message] : args.message;\n\n      setTimeout(function() {\n\n        args = $.extend(true, {\n          callback: null,\n          lineCallback: null,\n          displayedLineCallback: null,\n          displayTextTime: DISPLAY_TEXT_TIME,\n          displayWordTime: DISPLAY_WORD_TIME,\n          freezeLastLine: false\n        }, args);\n\n        args.displayTextTime = !args.displayTextTime && args.displayTextTime !== 0 ? DISPLAY_TEXT_TIME : args.displayTextTime;\n        args.displayWordTime = !args.displayWordTime && args.displayWordTime !== 0 ? DISPLAY_WORD_TIME : args.displayWordTime;\n\n        _message = args.message;\n\n        _displayMessage(args.message, 0, args);\n      });\n    });\n\n    Message.on('hideMessage', function(callback) {\n      if (!_message || !_message.length) {\n        if (callback) {\n          callback();\n        }\n\n        return;\n      }\n\n      _hideMessage(_message.length - 1, function() {\n        if (callback) {\n          callback();\n        }\n      });\n    });\n\n    done();\n  });\n\n})();\n"],"sourceRoot":"/source/"}