{"version":3,"sources":["autocomplete/pl-autocomplete.js"],"names":["window","Ractive","controller","component","data","el","config","done","_refresh","top","_$el","input","offset","width","outerWidth","height","outerHeight","Autocomplete","set","get","length","listContent","_select","event","select","val","_change","change","_charCode","original","charCode","keyCode","plName","$","extend","focused","inEdition","listfocused","listTop","listWidth","listHeight","selection","partials","templateDefault","join","refresh","clear","focus","find","list","template","on","parseInt","keypath","substring","lastIndexOf","value","stopPropagation","preventDefault","context","blur","keydown","keyup","observe","setTimeout"],"mappings":"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","file":"autocomplete/pl-autocomplete.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.controller('pl-autocomplete', function(component, data, el, config, done) {\n\n    var Autocomplete = component({\n          plName: 'pl-autocomplete',\n          data: $.extend(true, {\n            focused: false,\n            inEdition: false,\n            listfocused: -1,\n            listTop: 0,\n            listWidth: 0,\n            listHeight: 0,\n            selection: ''\n          }, data),\n          partials: $.extend(true, {\n            templateDefault: [\n            '<div',\n              ' class=\"pl-autocomplete-list-item {{listfocused == @index ? \\'focused\\' : \\'\\'}}\"',\n              ' on-mousedown=\"selectListItem\"',\n              ' on-mouseenter=\"enterListItem\"',\n            '>',\n              '{{{display}}}',\n            '</div>'\n            ].join('')\n          }, config.partials),\n\n          refresh: function() {\n            _refresh();\n          },\n\n          clear: function() {\n            _$el.input.val('');\n\n            _change(event);\n          },\n\n          focus: function() {\n            _$el.input.focus();\n          }\n        }),\n        _$el = {\n          window: $(window),\n          input: $(Autocomplete.el).find('.pl-autocomplete-input'),\n          selection: $(Autocomplete.el).find('.pl-autocomplete-selection'),\n          list: $(Autocomplete.el).find('.pl-autocomplete-list'),\n          listContent: $(Autocomplete.el).find('.pl-autocomplete-list-content')\n        };\n\n    function _refresh() {\n      var top = _$el.input.offset().top,\n          width = _$el.input.outerWidth(),\n          height = _$el.input.outerHeight();\n\n      Autocomplete.set('inEdition', Autocomplete.get('focused') && Autocomplete.get('list') && Autocomplete.get('list').length);\n\n      Autocomplete.set('listWidth', width);\n      Autocomplete.set('listHeight', Autocomplete.get('focused') ? _$el.listContent.outerHeight() : 0);\n\n      if (top + (height - 2) + Autocomplete.get('listHeight') > _$el.window.height()) {\n        Autocomplete.set('listFromBottom', true);\n        Autocomplete.set('listTop', -Autocomplete.get('listHeight') + 2);\n      }\n      else {\n        Autocomplete.set('listFromBottom', false);\n        Autocomplete.set('listTop', height - 2);\n      }\n\n      Autocomplete.set('selectionWidth', width);\n    }\n\n    function _select(event) {\n      var select = Autocomplete.get('select');\n      if (select) {\n        select(event, _$el.input.val(), Autocomplete);\n      }\n    }\n\n    function _change(event) {\n      var change = Autocomplete.get('change');\n      if (change) {\n        change(event, _$el.input.val(), Autocomplete);\n      }\n    }\n\n    function _charCode(event) {\n      return event.original.charCode ? event.original.charCode : event.original.keyCode;\n    }\n\n    Autocomplete.partials.template = Autocomplete.partials.template || Autocomplete.partials.templateDefault;\n\n    Autocomplete.on('enterListItem', function(event) {\n      var list = Autocomplete.get('list'),\n          listfocused = parseInt(event.keypath.substring(event.keypath.lastIndexOf('.') + 1), 10);\n\n      Autocomplete.set('listfocused', listfocused);\n      Autocomplete.set('selection', list && list.length && list[listfocused].value || '');\n    });\n\n    Autocomplete.on('selectListItem', function(event) {\n      event.original.stopPropagation();\n      event.original.preventDefault();\n\n      _$el.input.val(event.context.value);\n\n      _change(event);\n      _select(event);\n    });\n\n    Autocomplete.on('inputFocus', function(event) {\n      Autocomplete.set('focused', true);\n\n      _refresh();\n\n      var focus = Autocomplete.get('focus');\n      if (focus) {\n        focus(event, _$el.input.val(), Autocomplete);\n      }\n    });\n\n    Autocomplete.on('inputBlur', function(event) {\n      Autocomplete.set('focused', false);\n\n      _refresh();\n\n      var blur = Autocomplete.get('blur');\n      if (blur) {\n        blur(event, _$el.input.val(), Autocomplete);\n      }\n    });\n\n    Autocomplete.on('inputKeydown', function(event) {\n      var charCode = _charCode(event);\n\n      if (charCode == 9) {\n        var selection = Autocomplete.get('selection');\n\n        if (selection) {\n          event.original.stopPropagation();\n          event.original.preventDefault();\n\n          _$el.input.val(selection);\n\n          _change(event);\n\n          return;\n        }\n      }\n\n      var keydown = Autocomplete.get('keydown');\n      if (keydown) {\n        keydown(event, Autocomplete);\n      }\n    });\n\n    Autocomplete.on('inputKeyup', function(event) {\n      var keyup = Autocomplete.get('keyup');\n      if (keyup) {\n        if (keyup(event, Autocomplete) === false) {\n          return;\n        }\n      }\n\n      var charCode = _charCode(event),\n          selection = Autocomplete.get('selection'),\n          list = Autocomplete.get('list'),\n          listfocused = Autocomplete.get('listfocused');\n\n      // Right\n      if (charCode == 39 && selection) {\n        _$el.input.val(selection);\n\n        _change(event);\n\n        return;\n      }\n\n      // Top - Bottom\n      if ((charCode == 38 || charCode == 40) && list && list.length) {\n        listfocused = listfocused + (charCode == 38 ? -1 : 1);\n        listfocused = listfocused == -2 ? list.length - 1 : listfocused;\n        listfocused = listfocused == list.length ? -1 : listfocused;\n\n        Autocomplete.set('listfocused', listfocused);\n        Autocomplete.set('selection', list && list.length && list[listfocused].value || '');\n\n        return;\n      }\n\n      // Enter\n      if (charCode == 13) {\n        if (!list || !list.length || listfocused === -1) {\n          _select(event);\n        }\n        else if (list && list.length && list[listfocused]) {\n          _$el.input.val(list[listfocused].value);\n\n          Autocomplete.set('listfocused', -1);\n\n          _change(event);\n          _select(event);\n        }\n\n        return;\n      }\n\n      _change(event);\n    });\n\n    Autocomplete.observe('list', function(list) {\n      Autocomplete.set('selection', list && list.length && list[0].value || '');\n      Autocomplete.set('listfocused', -1);\n\n      setTimeout(_refresh);\n    });\n\n    done();\n  });\n\n})();\n"],"sourceRoot":"/source/"}