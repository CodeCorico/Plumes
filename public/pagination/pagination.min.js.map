{"version":3,"sources":["pagination/pagination.js"],"names":["window","Ractive","controller","component","data","el","config","done","_updatePages","pages","totalPages","parseInt","pagination","get","pageSelected","displayPagesCount","selectIndex","Math","round","start","max","stop","min","i","push","toString","set","refs","displayFirstButton","displayLastButton","displayPreviousButton","displayNextButton","$","each","key","value","observe","newValue","setTimeout","onpagselected","on","event","context"],"mappings":"CAAA,WACE,YAEAA,QAAOC,QAAQC,WAAW,aAAc,SAASC,EAAWC,EAAMC,EAAIC,EAAQC,GAqB5E,QAASC,KACP,GAAIC,MACAC,EAAaC,SAASC,EAAWC,IAAI,cAAe,IACpDC,EAAeH,SAASC,EAAWC,IAAI,gBAAiB,IACxDE,EAAoBJ,SAASC,EAAWC,IAAI,qBAAsB,IAClEG,EAAcC,KAAKC,MAAMH,EAAoB,GAAK,EAClDI,EAAQF,KAAKG,IAAI,EAAGN,EAAeE,GACnCK,EAAOJ,KAAKK,IAAIZ,EAAa,EAAGS,EAAQJ,EAEzBA,GAAfM,EAAOF,GAA6BA,EAAQ,IAC9CA,EAAQF,KAAKG,IAAI,EAAGD,GAASJ,GAAqBM,EAAOF,KAG3D,KAAK,GAAII,GAAIJ,EAAWE,EAAJE,EAAUA,IAC5Bd,EAAMe,KAAKD,EAAEE,WAGfb,GAAWc,IAAI,QAASjB,GApC1B,GAAIG,GAAa,KACbe,GACEjB,WAAY,cACZI,aAAc,gBACdC,kBAAmB,sBACnBa,mBAAoB,uBACpBC,kBAAmB,sBACnBC,sBAAuB,0BACvBC,kBAAmB,sBAGzBC,GAAEC,KAAKN,EAAM,SAASO,EAAKC,GACzB/B,EAAK8B,GAAO9B,EAAK+B,IAAyB,SAAf/B,EAAK+B,IAAoB,GAAQ,IAG9D/B,EAAKM,WAAaN,EAAK,eAAiBO,SAASP,EAAK,eAAgB,IAAM,GAC5EA,EAAKU,aAAeV,EAAK,iBAAmBO,SAASP,EAAK,iBAAkB,IAAM,EAClFA,EAAKW,kBAAoBX,EAAK,uBAAyBO,SAASP,EAAK,uBAAwB,IAAM,EAsBnGQ,EAAaT,GACXC,KAAMA,IAGR4B,EAAEC,KAAKN,EAAM,SAASO,EAAKC,GACzBvB,EAAWwB,QAAQD,EAAO,SAASE,GACjCA,EAA8B,mBAAZA,IAA0B,EAAOA,EAEnDzB,EAAWc,IAAIQ,EACD,SAAZG,GAAsB,EACV,QAAZA,GAAqB,EAAOA,OAKlCzB,EAAWwB,QAAQ,eAAgB,SAASC,GAC1C,GAAIF,GAAQlB,KAAKG,IAAI,EAAGH,KAAKK,IAAIX,SAASC,EAAWC,IAAI,cAAe,IAAKwB,IAAWZ,UACxF,IAAIU,IAAUE,EAKZ,MAJAC,YAAW,WACT1B,EAAWc,IAAI,eAAgBS,MAG1B,CAGT,IAAII,GAAgB3B,EAAWC,IAAI,gBAC/B0B,IACFA,EAAc5B,SAASwB,EAAO,KAGhC3B,MAGFI,EAAWwB,QAAQ,+BAAgC,WACjD5B,IACAI,EAAWc,IAAI,mBAAoBf,SAASP,EAAKM,WAAY,IAAMC,SAASP,EAAKW,kBAAmB,OAGtGP,IAEAI,EAAW4B,GAAG,aAAc,SAASC,GACnC7B,EAAWc,IAAI,eAAgBe,EAAMC,WAGvC9B,EAAW4B,GAAG,eAAgB,WAC5B5B,EAAWc,IAAI,eAAgBf,SAASC,EAAWC,IAAI,gBAAiB,IAAM,KAGhFD,EAAW4B,GAAG,WAAY,WACxB5B,EAAWc,IAAI,eAAgBf,SAASC,EAAWC,IAAI,gBAAiB,IAAM,KAGhFD,EAAW4B,GAAG,YAAa,WACzB5B,EAAWc,IAAI,eAAgB,OAGjCd,EAAW4B,GAAG,WAAY,WACxB5B,EAAWc,IAAI,eAAgBd,EAAWC,IAAI,iBAGhDN","file":"pagination/pagination.min.js","sourcesContent":["(function() {\n  'use strict';\n\n  window.Ractive.controller('pagination', function(component, data, el, config, done) {\n\n    var pagination = null,\n        refs = {\n          totalPages: 'total-pages',\n          pageSelected: 'page-selected',\n          displayPagesCount: 'display-pages-count',\n          displayFirstButton: 'display-first-button',\n          displayLastButton: 'display-last-button',\n          displayPreviousButton: 'display-previous-button',\n          displayNextButton: 'display-next-button'\n        };\n\n    $.each(refs, function(key, value) {\n      data[key] = data[value] && data[value] == 'false' ? false : true;\n    });\n\n    data.totalPages = data['total-pages'] ? parseInt(data['total-pages'], 10) : 20;\n    data.pageSelected = data['page-selected'] ? parseInt(data['page-selected'], 10) : 1;\n    data.displayPagesCount = data['display-pages-count'] ? parseInt(data['display-pages-count'], 10) : 7;\n\n    function _updatePages() {\n      var pages = [],\n          totalPages = parseInt(pagination.get('totalPages'), 10),\n          pageSelected = parseInt(pagination.get('pageSelected'), 10),\n          displayPagesCount = parseInt(pagination.get('displayPagesCount'), 10),\n          selectIndex = Math.round(displayPagesCount / 2) - 1,\n          start = Math.max(1, pageSelected - selectIndex),\n          stop = Math.min(totalPages + 1, start + displayPagesCount);\n\n      if (stop - start < displayPagesCount && start > 1) {\n        start = Math.max(1, start - (displayPagesCount - (stop - start)));\n      }\n\n      for (var i = start; i < stop; i++) {\n        pages.push(i.toString());\n      }\n\n      pagination.set('pages', pages);\n    }\n\n    pagination = component({\n      data: data\n    });\n\n    $.each(refs, function(key, value) {\n      pagination.observe(value, function(newValue) {\n        newValue = typeof newValue == 'undefined' ? true : newValue;\n\n        pagination.set(key,\n          newValue == 'false' ? false : (\n          newValue == 'true' ? true : newValue\n        ));\n      });\n    });\n\n    pagination.observe('pageSelected', function(newValue) {\n      var value = Math.max(1, Math.min(parseInt(pagination.get('totalPages'), 10), newValue)).toString();\n      if (value !== newValue) {\n        setTimeout(function() {\n          pagination.set('pageSelected', value);\n        });\n\n        return false;\n      }\n\n      var onpagselected = pagination.get('onpagselected');\n      if (onpagselected) {\n        onpagselected(parseInt(value, 10));\n      }\n\n      _updatePages();\n    });\n\n    pagination.observe('totalPages displayPagesCount', function() {\n      _updatePages();\n      pagination.set('hasActionButtons', parseInt(data.totalPages, 10) > parseInt(data.displayPagesCount, 10));\n    });\n\n    _updatePages();\n\n    pagination.on('selectPage', function(event) {\n      pagination.set('pageSelected', event.context);\n    });\n\n    pagination.on('previousPage', function() {\n      pagination.set('pageSelected', parseInt(pagination.get('pageSelected'), 10) - 1);\n    });\n\n    pagination.on('nextPage', function() {\n      pagination.set('pageSelected', parseInt(pagination.get('pageSelected'), 10) + 1);\n    });\n\n    pagination.on('firstPage', function() {\n      pagination.set('pageSelected', '1');\n    });\n\n    pagination.on('lastPage', function() {\n      pagination.set('pageSelected', pagination.get('totalPages'));\n    });\n\n    done();\n  });\n})();\n"],"sourceRoot":"/source/"}